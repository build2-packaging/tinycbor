# open_memstream.c implements open_memstream(), a POSIX function, on systems
# that are missing an implementation, presumably because they conform to a
# version older than POSIX.1-2008.
#
lib{tinycbor}: {h c}{* -open_memstream}

# Build options.
#
if ($c.target.class == 'windows')
{
  c.poptions += -DWITHOUT_OPEN_MEMSTREAM

  # CBOR_PRIVATE_API functions are called from inline functions in the public
  # API so must be exported.
  #
  objs{*}: c.poptions += -DCBOR_API='__declspec(dllexport)' \
                         -DCBOR_PRIVATE_API=CBOR_API
}

# Export options.
#
lib{tinycbor}: c.export.poptions = "-I$src_root"

if ($c.target.class == 'windows')
{
  libs{tinycbor}: c.export.poptions += -DCBOR_API='__declspec(dllimport)' \
                                       -DCBOR_PRIVATE_API=CBOR_API
}

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
if $version.pre_release
  lib{tinycbor}: bin.lib.version = @"-$version.project_id"
else
  lib{tinycbor}: bin.lib.version = @"-$version.major.$version.minor"

# Install into the libtinycbor/ subdirectory of, say, /usr/include/
# recreating subdirectories.
#
h{cbor}@./ h{cborjson}@./ h{tinycbor-version}@./:
{
  install         = include/libtinycbor/
  install.subdirs = true
}
